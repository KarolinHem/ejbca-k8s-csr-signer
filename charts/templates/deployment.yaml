apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ejbca-csr-signer.fullname" . }}
  labels:
    {{- include "ejbca-csr-signer.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "ejbca-csr-signer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.ejbca.vault.enabled }}
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: {{ .Values.ejbca.vault.roleName }}
        vault.hashicorp.com/agent-inject-secret-clientcert.pem: {{ .Values.ejbca.vault.vaultSecretPath }}
      {{- end }}
      labels:
        {{- include "ejbca-csr-signer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ejbca-csr-signer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.ejbca.image.repository }}:{{ .Values.ejbca.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ejbca.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.ejbca.healthcheckPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.ejbca.healthcheckPort }}
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.ejbca.healthcheckPort }}
            initialDelaySeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.ejbca.credsSecretName }}
              mountPath: /credentials
            - name: ejbca-config
              mountPath: /config
            {{- if not .Values.ejbca.ejbcaSslUsesPubliclyTrustedCa }}
            - name: {{ .Values.ejbca.caCertConfigmapName }}
              mountPath: /etc/ssl/certs/
            {{- end }}
            {{- if and (eq .Values.ejbca.useEST false) (eq .Values.ejbca.vault.enabled false) }}
            - name: {{ .Values.ejbca.clientCertSecretName }}
              mountPath: /clientcert
            {{- end }}
          env:
            - name: SERVICE_NAME
              value: {{ include "ejbca-csr-signer.fullname" . }}
            {{- if not .Values.ejbca.useEST }}
            - name: CLIENT_CERT_DIR
              {{- if .Values.ejbca.vault.enabled }}
              value: /vault/secrets/
              {{- else }}
              value: /clientcert/
              {{- end }}
            {{- end }}
            - name: CREDENTIALS_FILE_DIR
              value: credentials/
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ .Values.ejbca.credsSecretName }}
          secret:
            secretName: {{ .Values.ejbca.credsSecretName }}
        - name: ejbca-config
          configMap:
            name: ejbca-config
        {{- if not .Values.ejbca.ejbcaSslUsesPubliclyTrustedCa }}
        - name: {{ .Values.ejbca.caCertConfigmapName }}
          configMap:
            name: {{ .Values.ejbca.caCertConfigmapName }}
        {{- end }}
        {{- if and (eq .Values.ejbca.useEST false) (eq .Values.ejbca.vault.enabled false) }}
        - name: {{ .Values.ejbca.clientCertSecretName }}
          secret:
            secretName: {{ .Values.ejbca.clientCertSecretName }}
        {{- end }}